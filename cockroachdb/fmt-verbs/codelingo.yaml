funcs:
  - name: containsGeneralVerb
    type: asserter
    body: |
      function (str) {
        return str.indexOf("%v") !== -1;
      }
  - name: verbsForType
    type: resolver
    body: |
      function (type) {

        var types = {
        "string":     "%s", 
        "bool":       "%t",
        "int":        "%d",
        "int8":       "",
        "int16":      "",
        "int32":      "",
        "int64":      "",
        "uint":       "",
        "uint8":      "",
        "uint16":     "",
        "uint32":     "",
        "uint64":     "",
        "uintptr":    "",
        "byte":       "",
        "rune":       "",
        "float32":    "", 
        "float64":    "",
        "complex32":  "",
        "complex64":  "",
        }

        var result = types[type]

        if (typeof result == 'undefined') {
          return ""
        }

        return result
      }
tenets:
  - name: fmt-verbs
    vars:
      result: "{{verbsForType(argType)}}"
    flows:
      codelingo/docs:
        title: Use Appropriate Verbs in Format
        body: |
          Prefer the most specific verb for your use. In other words, 
          prefer to avoid %v when possible. However, %v is to be used 
          when formatting bindings which might be nil and which do not 
          already handle nil formatting. Notably, nil errors formatted 
          as %s will render as "%!s()" while nil errors formatted as %v 
          will render as "". Therefore, prefer %v when formatting errors 
          which are not known to be non-nil.
      codelingo/review:
        comment:  type should use -appropriate verb such as {{ result }}
    query: |

      import codelingo/ast/go

      go.call_expr(depth = any):
        go.selector_expr:
          @review comment
          go.ident:
            name == "fmt"
        go.args:   
          go.basic_lit:
            value as formatString
            kind == "string"
          go.ident:
            type as argType
            containsGeneralVerb(formatString)
            result != ""