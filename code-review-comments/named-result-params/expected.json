[
  {
   "Comment": "Parameter \"node\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 11,
   "Snippet": "}\n\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)"
  },
  {
   "Comment": "Parameter \"node\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 11,
   "Snippet": "}\n\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)"
  },
  {
   "Comment": "Parameter \"err\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 12,
   "Snippet": "\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)\n"
  },
  {
   "Comment": "Parameter \"err\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 12,
   "Snippet": "\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)\n"
  },
  {
   "Comment": "Parameter \"node\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 12,
   "Snippet": "\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)\n"
  },
  {
   "Comment": "Parameter \"node\" has the same name as its type. This causes the godocs to stutter. Consider removing the name of the return parameter.",
   "Filename": "effective-go/named-result-params/example.go",
   "Line": 12,
   "Snippet": "\nfunc (n *Node) Parent1() (node *Node)\nfunc (n *Node) Parent2() (node *Node, err error)\n"
  }
 ]