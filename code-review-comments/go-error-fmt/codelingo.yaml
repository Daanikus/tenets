funcs:
  - name: isInvalidErrName
    type: asserter
    body: |
      function (a) {
        var dot = a.charAt(a.length - 1) === '.'
        var cap = a.charAt(0) >= "A" && a.charAt(0) <= "Z"
        return dot || cap
      }
tenets:
  - name: go-error-fmt
    flows:
      codelingo/docs:
        title: Go Error Format
        body: |
          Error strings should not be capitalized (unless beginning with proper nouns 
          or acronyms) or end with punctuation, since they are usually printed following
           other context. That is, use fmt.Errorf("something bad") not fmt.Errorf("Something bad"),
            so that log.Printf("Reading %s: %v", filename, err) formats without a spurious 
            capital letter mid-message. This does not apply to logging, which is implicitly
             line-oriented and not combined inside other messages.
      codelingo/review:
        comment: Error strings should not be capitalized (unless beginning with proper nouns 
          or acronyms) or end with punctuation, since they are usually printed following
           other context.
    query: |
      import codelingo/ast/go

      go.call_expr(depth = any):
        go.selector_expr:
          go.ident:
            name == "fmt"
          go.ident:
            name == "Errorf"
        go.args:
          @review comment
          go.basic_lit:
            kind == "string"
            value as strValue
            isInvalidErrName(strValue)
