[
  {
   "Comment": "Do not discard errors using _ variables. If a function returns an error, \ncheck it to make sure the function succeeded. Handle the error, return it, or, \nin truly exceptional situations, panic.\n",
   "Filename": "effective-go/do-not-discard-errors/example.go",
   "Line": 11,
   "Snippet": "    file, err := os.Create(filename)\n    file, _ = os.Create(filename)\n    f, _ := os.Create(filename)\n}"
  },
  {
   "Comment": "Do not discard errors using _ variables. If a function returns an error, \ncheck it to make sure the function succeeded. Handle the error, return it, or, \nin truly exceptional situations, panic.\n",
   "Filename": "effective-go/do-not-discard-errors/example.go",
   "Line": 10,
   "Snippet": "func main() {\n    file, err := os.Create(filename)\n    file, _ = os.Create(filename)\n    f, _ := os.Create(filename)\n}"
  }
 ]